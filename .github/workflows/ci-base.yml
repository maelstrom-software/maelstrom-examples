# This is a [reusable
# workflow](https://docs.github.com/en/actions/sharing-automations/reusing-workflows)
# for the Maelstrom examples repository.
#
# The way Maelstrom works it GitHub right now limits it to one cluster per
# workflow. To run jobs on different OSes, we need to create separate workflow
# instances. We do that by having separate workflows that just call this
# workflow, with the OS passed in as a parameter.

name: CI Base

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  # This is the main job that builds all of the tests and acts as the
  # coordinator for running them on the Maelstrom cluster. It runs the broker
  # in the background while it calls the test runners.
  test-cargo-package:
    name: Run Tests in cargo-package
    runs-on: ${{ inputs.os }}

    steps:
    - name: Check Out Repository
      uses: actions/checkout@v4

    # This installs the latest cargo-maelstrom and exposes some environment variables.
    - name: Install and Configure cargo-maelstrom
      uses: maelstrom-software/cargo-maelstrom-action@main

    # This builds and runs all of the Rust tests in the cargo-package project.
    - name: Run cargo-maelstrom in cargo-package
      run: cargo maelstrom
      working-directory: cargo-package

  test-cargo-workspace:
    name: Run Tests in cargo-workspace
    runs-on: ${{ inputs.os }}

    steps:
    - name: Check Out Repository
      uses: actions/checkout@v4

    # This installs the latest cargo-maelstrom and exposes some environment variables.
    - name: Install and Configure cargo-maelstrom
      uses: maelstrom-software/cargo-maelstrom-action@main

    # This builds and runs all of the Rust tests in the cargo-workspace project.
    - name: Run cargo-maelstrom in cargo-workspace
      run: cargo maelstrom
      working-directory: cargo-workspace

  test-cargo-workspace-with-root-package:
    name: Run Tests in cargo-workspace-with-root-package
    runs-on: ${{ inputs.os }}

    steps:
    - name: Check Out Repository
      uses: actions/checkout@v4

    # This installs the latest cargo-maelstrom and exposes some environment variables.
    - name: Install and Configure cargo-maelstrom
      uses: maelstrom-software/cargo-maelstrom-action@main

    # This builds and runs all of the Rust tests in the cargo-workspace project.
    - name: Run cargo-maelstrom in cargo-workspace-with-root-package
      run: cargo maelstrom
      working-directory: cargo-workspace-with-root-package

  test-go:
    name: Run Tests in cargo-workspace-with-root-package
    runs-on: ${{ inputs.os }}

    steps:
    - name: Check Out Repository
      uses: actions/checkout@v4

    # This installs the latest maelstrom-go-test and exposes some environment variables.
    - name: Install and Configure maelstrom-go-test
      uses: maelstrom-software/maelstrom-go-test-action@main

    # This builds and runs all of the Go tests in go project.
    - name: Run maelstrom-go-test
      run: maelstrom-go-test
      working-directory: go

  stop-maelstrom:
    name: Stop Maelstrom Cluster
    runs-on: ${{ inputs.os }}
    if: ${{ always() }}
    needs: [test-cargo-package, test-cargo-workspace, test-cargo-workspace-with-root-package, test-go]

    steps:
    - name: Install and Configure maelstrom-go-test
      uses: maelstrom-software/maelstrom-admin@main

    - name: Stop Maelstrom Cluster
      run: maelstrom-admin stop

  # This is the broker job. It runs in parallel to the worker jobs and the client jobs.
  maelstrom-broker:
    name: Maelstrom Broker
    runs-on: ${{ inputs.os }}

    steps:
    - name: Install and Run Maelstrom Broker
      uses: maelstrom-software/maelstrom-broker-action@main

  # These are the worker jobs. Tests will execute on one of these workers.
  maelstrom-worker:
    strategy:
      matrix:
        worker-number: [1, 2, 3, 4]

    name: Maelstrom Worker ${{ matrix.worker-number }}
    runs-on: ${{ inputs.os }}

    steps:
    - name: Install and Run Maelstrom Worker
      uses: maelstrom-software/maelstrom-worker-action@v1
